@model List<LeantIt.Web.Models.CarroModel>

@{
    ViewData["Title"] = "Início";
}

<header>

    <a><img src="https://res.cloudinary.com/dtvypcack/image/upload/v1701711075/logo_recorte_dxihjz.png" class="logo"></a>
    <nav>
        <ul>
            <li><a asp-action="Index" asp-area="" asp-controller="Home" class="button-home">Home</a></li>
            <li><a asp-area="" asp-controller="OurServices" asp-action="Index">Categorias</a></li>
            @if (User.IsInRole("Admin"))
            {
                <li class="nav-item dropdown">
                    <a href="#">Admin</a>
                    <ul class="dropdown-menu">
                        <li><a class="add" asp-area="" asp-controller="Carros" asp-action="Adicionar">Add Carro</a></li>
                        <li><a class="listando" asp-area="" asp-controller="Carros" asp-action="Listar">Listar Carros</a></li>
                        <li>
                            <a class="add" id="register" asp-area="Identity" asp-page="/Account/Register">Registrar</a>
                        </li>
                    </ul>
                </li>      
            }
            <partial name="_LoginPartial" />
    </nav>

    <article class="article-description">
        <p class="paragraph-welcome">Bem-vindo ao LeanIt</p>

        <h1>
            Dirija a <span class="destaque-title"> Experiência</span>
            de se sentir bem
        </h1>

        <img src="https://res.cloudinary.com/dtvypcack/image/upload/v1701711071/elemento_titulos_ulz1x5.png" class="line-style-orange" width="145rem" height="25rem">

        <p class="paragraph-description">Desbrave novos horizontes com nosso serviço de aluguel de carros por viagem. Liberte-se da rotina, escolha o seu caminho. Clique em <span class="destaque-saber-mais">Saber Mais</span> e descubra como reinventamos a maneira de viajar.</p>

        <button class="article-description-button" asp-action="Index" asp-area="" asp-controller="Saiba">Saiba Mais</button>

    </article>
</header>
<main>
    <aside class="aside-info">
        <div>
            <p class="paragraph-bold-info">@ViewBag.QntCarros+</p>
            <p>Carros</p>
        </div>

        <div>
            <p class="paragraph-bold-info">R$12</p>
            <p>Por Hora</p>
        </div>

        <div>
            <p class="paragraph-bold-info">@ViewBag.QntPessoas</p>
            <p>Cadastros</p>
        </div>

        <div>
            <p class="paragraph-bold-info">5+</p>
            <p>Cidades</p>
        </div>
    </aside>

    <article class="article-main">

        <div class="article-main-text">
            <h2 style="font-weight: 200; font-size: 1.2rem;">Preços</h2>
            <h1>Melhores preços para você e sua <span class="destaque-familia">família</span></h1>

            <img src="https://res.cloudinary.com/dtvypcack/image/upload/v1701711071/elemento_titulos_ulz1x5.png" class="line-style-orange-article-main" width="145rem" height="25rem">
        </div>

        <div class="cards">

            <div class="card-1">
                <div class="card-content">
                    <h3 class="card-title">Básico</h3>
                    <p class="paragraph-hour"><span class="value-hour">R$12/</span>hora</p>
                    <p class="paragraph-description-categories">Carros básicos, perfeitos para deslocamentos eficientes. Economia sem sacrificar o conforto. Ideal para trajetos urbanos e viagens descomplicadas.</p>
                </div>

                <div class="button-container">
                    <button>Saber Mais</button>
                </div>
            </div>

            <div class="card-2">
                <div class="card-content">
                    <h3 class="card-title">Família</h3>
                    <p class="paragraph-hour"><span class="value-hour">R$15/</span>hora</p>
                    <p class="paragraph-description-categories">Espaço e conforto definem nossa categoria de carros para famílias. Viaje com estilo e comodidade, proporcionando uma experiência agradável para todos os passageiros.</p>
                </div>

                <div class="button-container">
                    <button>Saber Mais</button>
                </div>
            </div>

            <div class="card-3">
                <div class="card-content">
                    <h3 class="card-title">Luxo</h3>
                    <p class="paragraph-hour"><span class="value-hour">R$21/</span>hora</p>
                    <p class="paragraph-description-categories">Experimente o ápice do luxo e da elegância. Nossa categoria de carros de luxo oferece uma viagem sofisticada, com design premium e recursos excepcionais. Faça cada viagem se tornar uma experiência memorável.</p>
                </div>

                <div class="button-container">
                    <button>Saber Mais</button>
                </div>
            </div>

        </div>

    </article>

</main>
<aside class="aside-search-localization">
    <div class="paragraph-map">
        <p>Escolha seu carro</p>
        <p class="paragraph-right-map">LeanIt é a sua melhor escolha</p>
    </div>

    <div class="form-map">
        <div class="labels">
            <label class="labelLoc">Sua localização</label>
            <label class="labelDestino">Seu destino</label>
        </div>
        <div class="search-map">
            <div class="loc">
                <div>
                    <input id="pac-input" type="text" placeholder="Digite sua localização">
                </div>

                <select id="opcoesDeViagens">
                    <option>Selecione transporte</option>
                    <option value="WALKING">A pé</option>
                    <option value="DRIVING">Carro</option>
                    <option value="BICYCLING">Bicicleta</option>
                    <option value="TRANSIT">Transporte</option>
                </select>

            </div>
            <div class="escolhaDestino">
                <div>
                    <input class="destino" id="pac-destino" type="text" placeholder="Digite seu destino">
                    <button class="buttonPesquisar">Gerar rota</button>
                </div>
            </div>
        </div>
    </div>


    @* <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d227806.87476532854!2d-49.099103799999995!3d-26.85640995!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x94df1e408b5c3095%3A0xacfb8520bc1a7644!2sBlumenau%2C%20SC!5e0!3m2!1spt-BR!2sbr!4v1699039096703!5m2!1spt-BR!2sbr" width="100%" height="650" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe> *@

    <div id="map" style="width: 100%; height:650px"></div>

</aside>


<footer>

    <div class="footer-main">
        <div class="footer-about">
            <p class="footer-title">Sobre a LeanIt</p>
            <p class="footer-paragraph-about">Nós levamos a outro nível a locomoção por meio de nossa tecnologia</p>
            <div class="icons-about"><a href="#"><i class="fa-brands fa-youtube"></a></i> <a href="#"><i class="fa-brands fa-facebook"></a></i> <a href="#"><i class="fa-brands fa-instagram"></i></a> <a href="#"><i class="fa-brands fa-square-x-twitter"></i></a></div>
        </div>

        <div class="footer-extra">
            <p class="footer-title">Nossa Página</p>
            <p><a href="#">Nosso blog</a></p>
            <p><a href="#">Sobre o Projeto</a></p>
            <p><a href="https://www.entra21.com.br/" target="_blank">Entra21</a></p>
            <p><a href="#">Planos de Carreira</a></p>
            <p><a asp-area="" asp-controller="OurServices" asp-action="Index">Guia Turístico</a></p>
            <p><a asp-area="" asp-controller="OurServices" asp-action="Index">Serviços</a></p>
        </div>

        <div class="footer-contact">
            <p class="footer-title">Contate-nos</p>
            <p class="paragraph-contact paragraph-contact-top"><i class="fa-solid fa-phone phone-icon"></i>+55 (47) 9999-9999</p>
            <p class="paragraph-contact"><i class="fa-solid fa-envelope email-icon"></i><a href="#">contact@leanit.com</a></p>
        </div>
    </div>

    <p class="footer-copyright">Copyright © 2023 All rights deserved</p>

</footer>

@section Styles {
    <link rel="stylesheet" href="~/css/site.css" />
}


@section Scripts {
    <script>

        var lat;
        var lng;
        var passou = false
        var passouHandleMarkerClick = false
        var enderecoSemPlusCode
        var enderecoSemPlusCode2 = null
        var arrayMarcadores = [];

        //Function para o GeoLocation

        function success(pos) {
            lat = pos.coords.latitude;
            lng = pos.coords.longitude;
            passou = true
            initMap();
        }

        navigator.geolocation.getCurrentPosition(success);

        //

        var meuIcon = 'https://res.cloudinary.com/dubnbered/image/upload/v1702342339/pin-do-mapa_okjn2q.png';

        //Iniciando o mapa, caso o usuário tenha o GeoLocation ele cai no if se não no else

        function initMap() {
            if (passou == true) {
                var map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 15,
                    center: { lat: lat, lng: lng } //Posição do usuário através do GeoLocation
                });

                var marker = new google.maps.Marker({
                    position: { lat: lat, lng: lng },
                    map: map,
                    icon: meuIcon,
                    animation: google.maps.Animation.DROP
                });
            }
            else {
                var map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 15,
                    center: { lat: -26.917231, lng: - 49.071175 } //Centro de Blumenau
                });
            }


            var array = [];
            var icon = 'https://res.cloudinary.com/dtvypcack/image/upload/v1702156334/image-removebg-preview_5_vjrfkz_iq0hzk.png';

            //Input de onde o usuário está. Dá locais conforme o usuário está digitando
            var input = document.getElementById('pac-input');
            var searchBox = new google.maps.places.SearchBox(input);

            searchBox.addListener('places_changed', function () {
                var places = searchBox.getPlaces();

                if (places.length === 0) {
                    return;
                }

                //Pega a informação do lugar selecionado
                var selectedPlace = places[0];
                console.log(selectedPlace);

                //Atualiza o mapa com a localização atualizada
                map.setCenter(selectedPlace.geometry.location);
            });


            //Input de onde o usuário vai. Dá locais conforme o usuário está digitando
            var inputDestino = document.getElementById('pac-destino');
            var searchBox2 = new google.maps.places.SearchBox(inputDestino);

            searchBox2.addListener('places_changed', function () {
                var places = searchBox2.getPlaces();

                if (places.length === 0) {
                    return;
                }

                //Pega a informação do lugar selecionado
                var selectedPlace = places[0];
                console.log(selectedPlace);

                //Atualiza o mapa com a localização atualizada
                map.setCenter(selectedPlace.geometry.location);
            });

            let directionsService = new google.maps.DirectionsService();
            let directionsRenderer = new google.maps.DirectionsRenderer({
                suppressMarkers: true
            });

            directionsRenderer.setMap(map);

            // Funcao para limpar marcadores que sao criados atraves de rotas geradas
            function limparRota(){

                //Confiro se tem marcadores dentro da array, se tiver ele entra
                if(arrayMarcadores.length > 0){

                    //Faço um for para pecorrer na array e nele tiro os marcadores do mapa usando o setMap null
                    for (let i = 0; i < arrayMarcadores.length; i++){
                        arrayMarcadores[i].setMap(null)
                    }

                    arrayMarcadores = []
                }
            }

            //Gera as rotas
            document.querySelector('.buttonPesquisar').addEventListener('click', function () {

                var modoViagem = document.querySelector('#opcoesDeViagens')
                var modo = modoViagem.value
                var atual = input.value;
                var destino = inputDestino.value;

                console.log(modoViagem)

                let request = {
                    origin: atual,
                    destination: destino,
                    travelMode: modo
                };


                directionsService.route(request, function (result, status) {
                    if (status == 'OK') {

                        limparRota();

                        //Quando gerar a rota, se o usuário não tiver o Geolocation, ele gera cria o icon de pessoa
                        if (passou == false) {
                            directionsRenderer.setDirections(result);
                            arrayMarcadores.push(new google.maps.Marker({
                                position: result.routes[0].legs[0].start_location,
                                map: map,
                                // icon pessoa
                                icon: meuIcon,
                                title: 'Partida',
                                animation: google.maps.Animation.DROP
                            }));
                        }
                        else if (passou == true && input.value != enderecoSemPlusCode2) {
                            directionsRenderer.setDirections(result);
                            arrayMarcadores.push(new google.maps.Marker({
                                position: result.routes[0].legs[0].start_location,
                                map: map,
                                icon: 'https://res.cloudinary.com/dubnbered/image/upload/v1702447989/map-pin_1_pgh2mc.png',
                                title: 'Partida',
                                animation: google.maps.Animation.DROP
                            }));
                        }
                        else {
                            directionsRenderer.setDirections(result);
                            arrayMarcadores.push(new google.maps.Marker({
                                position: result.routes[0].legs[0].start_location,
                                map: map,
                                title: 'Partida',
                                icon: 'https://res.cloudinary.com/dubnbered/image/upload/v1702449262/map-pin_2_ijgdu1.png',
                                animation: google.maps.Animation.DROP
                            }));
                        }

                        arrayMarcadores.push(new google.maps.Marker({
                            position: result.routes[0].legs[0].end_location,
                            map: map,
                            icon: 'https://res.cloudinary.com/dubnbered/image/upload/v1702447871/map-pin_dl4zkw.png',
                            title: 'Chegada',
                            animation: google.maps.Animation.DROP
                        }));
                    }
                });
            });

            //Converter os números de longitude e latitude do Geolocation para nome de locais
            if (passou == true) {
                var latitude = lat;
                var longitude = lng;
                var input = document.getElementById('pac-input');
                // Converte coordenadas em endereço
                converterParaEndereco(latitude, longitude);
            }

            //

            function converterParaEndereco(latitude, longitude) {
                var latLng = new google.maps.LatLng(latitude, longitude);

                var geocoder = new google.maps.Geocoder();
                geocoder.geocode({ 'latLng': latLng }, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        if (results[0]) {
                            // Obtém o endereço completo
                            var enderecoCompleto = results[0].formatted_address;

                            // Remove o Plus Code se tiver
                            enderecoSemPlusCode = enderecoCompleto.replace(/\s[C0-9+]+$/, '');

                            console.log('Endereço:', enderecoSemPlusCode);

                            // Preenche o valor do input de inicio
                            if (enderecoSemPlusCode2 == null) {
                                enderecoSemPlusCode2 = enderecoSemPlusCode
                            }

                            if (passouHandleMarkerClick == true) {
                                inputDestino.value = enderecoSemPlusCode
                                passouHandleMarkerClick = false
                            }
                            else {
                                input.value = enderecoSemPlusCode;
                            }

                            // Obtem a localização mais próxima
                            obterLocalizacaoMaisProxima(latitude, longitude);
                        } else {
                            console.error('Nenhum resultado encontrado');
                        }
                    } else {
                        console.error('Geocodificação falhou devido a:', status);
                    }
                });
            }
            @if (ViewBag.Pendente == null)
            {
                @foreach (var carro in Model)
                {
                    //Renderiza os carros no mapa caso o carro esteja disponível
                    @if (carro.Status != false)
                    {
                        <text>
                            var marker = new google.maps.Marker({
                                position: { lat: @carro.Latitude, lng: @carro.Longitude },
                                map: map,
                                icon: icon,
                                title: '@carro.Marca'
                            });

                            var urlImagemCarro;

                            var infoWindow = new google.maps.InfoWindow({
                                content:
                                    `
                                        <div id="car-details">
                                            @switch (carro.Categoria.Descricao)
                                            {
                                                case "Basico":
                                                    <img id="car-image" src="https://res.cloudinary.com/dubnbered/image/upload/v1702226094/carro_onix_vdns5r_azgtcz.png" alt="Imagem do Carro">
                                                    break;
                                                case "Carga":
                                                    <img id="car-image" src="https://res.cloudinary.com/dubnbered/image/upload/v1706293153/mlp-img-top-2022-sprinter_hwhox5.png" alt="Imagem do Carro">
                                                    break;
                                                case "Familia":
                                                    <img id="car-image" class="car-family" src="https://res.cloudinary.com/dubnbered/image/upload/v1702226094/carro_ecosport_rw5dxh_a1v2gt.png" alt="Imagem do Carro">
                                                    break;
                                            }
                                            <div id="car-info">
                                                <h2>@carro.Marca @carro.Modelo</h2>
                                                <p>Modelo: @carro.Modelo</p>
                                                <p>Ano do Modelo: @carro.Year</p>
                                                <p>Categoria: @carro.Categoria.Descricao</p>
                                                </div>
                                            <div id="choose-car-btn">
                                                @Html.ActionLink("Selecionar carro", "Index", "CarroEscolhido", new {id = @carro.Id})
                                            </div>
                                        </div>
                                    `,
                            });

                            array.push({ marker: marker, infoWindow: infoWindow });

                            marker.addListener('click', (function (infoWindow, marker) {
                                return function () {
                                    handleMarkerClick(marker);
                                    // Fechar todas as janelas de informações abertas
                                    array.forEach(function (item) {
                                        item.infoWindow.close();
                                    });

                                    // Abrir a infowindow
                                    infoWindow.open(map, marker);
                                };
                            })(infoWindow, marker));
                        </text>
                    }

                }
            }

            function handleMarkerClick(marker) {
                // Obter a posição do marcador clicado
                var position = marker.getPosition();

                // Agora você pode usar position.lat() e position.lng() conforme necessário
                console.log('Latitude:', position.lat());
                console.log('Longitude:', position.lng());
                passouHandleMarkerClick = true;

                converterParaEndereco(position.lat(), position.lng())
                // Adicione lógica adicional com base na posição do marcador clicado
            }
        }
    </script>
    <script async
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCh7XqulgkrxKP_wwrWE4fX_dECUGI6xhI&libraries=places&callback=initMap">
    </script>
    <script src="~/js/contagemMinutos.js"></script>
}